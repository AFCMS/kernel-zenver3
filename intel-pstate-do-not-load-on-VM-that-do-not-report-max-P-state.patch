Hi Josh,

Sorry for the slow resopnse you caught me on vacation :-)

I do not have either of these VMs ATM to test against.  The patch below
should solve the problem though It looks like the VM is returning zero
for the highest P state (frequency) MSR.  The patch will have the driver refuse 
to load and the system should fall through to one of the other configured 
governors/ scaling drivers.

Is it possible for tyou to test the patch below while I try to get a test setup
put together locally?

Thanks in advance
--Dirk

On 03/01/2013 06:13 AM, Josh Boyer wrote:
> Hi,
>
> We've had a report[1] that the intel_pstate driver will panic on boot
> under certain virtual machine environments.  Thus far it seems VMWare
> and Hyper-V both see this.  While this may be because of something those
> VMs are doing, the driver probably shouldn't cause a panic if it's
> getting some iffy data.
>
commit db138459876467dd1b4785ce2b35c9db31dab056
Author: Dirk Brandewie <dirk.brandewie@gmail.com>
Date:   Mon Mar 4 10:14:42 2013 -0800

     cpufreq/intel_pstate: Do not load on VM that do not report max P state.

     It seems some VMs support the P state MSRs but return zeros. Fail
     gracefully if we are running in this environment.

     https://bugzilla.redhat.com/show_bug.cgi?id=916833

     Reported-by: jwboyer@redhat.com

     Signed-off-by: Dirk Brandewie <dirk.brandewie@gmail.com>
---
  drivers/cpufreq/intel_pstate.c |    3 +++
  1 files changed, 3 insertions(+), 0 deletions(-)


diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index 096fde0..2bfd083 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -662,6 +662,9 @@ static int intel_pstate_set_policy(struct cpufreq_policy *policy)
 
 	cpu = all_cpu_data[policy->cpu];
 
+	if (!policy->cpuinfo.max_freq)
+		return -ENODEV;
+
 	intel_pstate_get_min_max(cpu, &min, &max);
 
 	limits.min_perf_pct = (policy->min * 100) / policy->cpuinfo.max_freq;
